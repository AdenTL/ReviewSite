// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using template_csharp_reviews_site;

#nullable disable

namespace template_csharp_reviews_site.Migrations
{
    [DbContext(typeof(VideoGameContext))]
    partial class VideoGameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("template_csharp_reviews_site.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VideoGameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VideoGameId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Fall guys is awesome",
                            Rating = 8,
                            User = "John Doe",
                            VideoGameId = 1
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Bloodhunt is alright",
                            Rating = 6,
                            User = "Jane Doe",
                            VideoGameId = 2
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Fortnite sucks",
                            Rating = 3,
                            User = "Jonnathan Doe",
                            VideoGameId = 3
                        },
                        new
                        {
                            Id = 4,
                            Comment = "Apex Legends is decent",
                            Rating = 5,
                            User = "John Deer",
                            VideoGameId = 4
                        },
                        new
                        {
                            Id = 5,
                            Comment = "Warzone is horrible",
                            Rating = 1,
                            User = "Jack Doe",
                            VideoGameId = 5
                        });
                });

            modelBuilder.Entity("template_csharp_reviews_site.Models.VideoGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Studio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VideoGames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fall Guys",
                            Studio = "Mediatonic"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bloodhunt",
                            Studio = "Sharkmob"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fortnite",
                            Studio = "Epic Games"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Apex Legends",
                            Studio = "Respawn"
                        },
                        new
                        {
                            Id = 5,
                            Name = "COD: Warzone",
                            Studio = "Acti-Blizz"
                        });
                });

            modelBuilder.Entity("template_csharp_reviews_site.Models.Review", b =>
                {
                    b.HasOne("template_csharp_reviews_site.Models.VideoGame", "VideoGame")
                        .WithMany("Reviews")
                        .HasForeignKey("VideoGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VideoGame");
                });

            modelBuilder.Entity("template_csharp_reviews_site.Models.VideoGame", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
